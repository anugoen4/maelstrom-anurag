2024-01-19 19:38:50,757{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test --workload broadcast --bin ./broadcast/solution.py --node-count 5 --time-limit 2 --rate 10
2024-01-19 19:38:50,810{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 5
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16142
         "0x2a654f27"
         "maelstrom.db$db$reify__16142@2a654f27"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x583f6270" "2024-01-19T19:38:50.738+05:30"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x2bd24c09"
         "maelstrom.net$jepsen_net$reify__15251@2bd24c09"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__16644
         "0x3e6b8b27"
         "maelstrom.workload.broadcast$client$reify__16644@3e6b8b27"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x7e199cec"
         "java.util.concurrent.CyclicBarrier@7e199cec"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x5d965dbd"
         "jepsen.checker$compose$reify__11881@5d965dbd"]
 :argv
 ("test"
  "--workload"
  "broadcast"
  "--bin"
  "./broadcast/solution.py"
  "--node-count"
  "5"
  "--time-limit"
  "2"
  "--rate"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@649df002"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@6cd7d05"]})
 :nodes ["n0" "n1" "n2" "n3" "n4"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "./broadcast/solution.py"
 :generator
 ((jepsen.generator.Synchronize
   {:gen (jepsen.generator.TimeLimit
          {:limit 2000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads
                          {:f #{:nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x73f506d7"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@73f506d7"],
                           :gen nil})
                         (jepsen.generator.OnThreads
                          {:f #jepsen.generator.context.AllBut{:element :nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x1d957b5a"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@1d957b5a"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 200000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.Mix
                                        {:i 0,
                                         :gens [({:f :broadcast, :value 0}
                                                 {:f :broadcast, :value 1}
                                                 {:f :broadcast, :value 2}
                                                 {:f :broadcast, :value 3}
                                                 {:f :broadcast, :value 4}
                                                 {:f :broadcast, :value 5}
                                                 {:f :broadcast, :value 6}
                                                 {:f :broadcast, :value 7}
                                                 ...)
                                                ({:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 ...)]})})})]})})})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #{:nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x49de1717"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@49de1717"],
           :gen ()})})
  (jepsen.generator.Synchronize
   {:gen {:type :log, :value "Waiting for recovery..."}})
  (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #jepsen.generator.context.AllBut{:element :nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x12c66345"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@12c66345"],
           :gen (jepsen.generator.EachThread
                 {:fresh-gen {:f :read, :final? true},
                  :context-filters #object[clojure.core$promise$reify__8591
                                           "0x24bf95ec"
                                           {:status :pending, :val nil}],
                  :gens {}})})}))
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x13ae0ffd"
         "maelstrom.net$jepsen_os$reify__15254@13ae0ffd"]
 :time-limit 2
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-01-19 19:38:51,676{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2024-01-19 19:38:51,677{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-01-19 19:38:51,679{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-01-19 19:38:51,680{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2024-01-19 19:38:51,680{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2024-01-19 19:38:51,680{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2024-01-19 19:38:51,680{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2024-01-19 19:38:51,680{GMT}	INFO	[jepsen node n4] maelstrom.process: launching ./broadcast/solution.py []
2024-01-19 19:38:51,680{GMT}	INFO	[jepsen node n2] maelstrom.process: launching ./broadcast/solution.py []
2024-01-19 19:38:51,680{GMT}	INFO	[jepsen node n3] maelstrom.process: launching ./broadcast/solution.py []
2024-01-19 19:38:51,680{GMT}	INFO	[jepsen node n1] maelstrom.process: launching ./broadcast/solution.py []
2024-01-19 19:38:51,680{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-01-19 19:38:51,682{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2024-01-19 19:38:51,683{GMT}	INFO	[jepsen node n0] maelstrom.process: launching ./broadcast/solution.py []
2024-01-19 19:38:51,916{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2024-01-19 19:38:51,930{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	0
2024-01-19 19:38:51,932{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	0
2024-01-19 19:38:51,948{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	1
2024-01-19 19:38:51,950{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:broadcast	1
2024-01-19 19:38:52,131{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2024-01-19 19:38:52,137{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	[0 1]
2024-01-19 19:38:52,264{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	2
2024-01-19 19:38:52,270{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	2
2024-01-19 19:38:52,300{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2024-01-19 19:38:52,303{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[0 1 2]
2024-01-19 19:38:52,381{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	3
2024-01-19 19:38:52,383{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	3
2024-01-19 19:38:52,576{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	4
2024-01-19 19:38:52,580{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	4
2024-01-19 19:38:52,757{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:read	nil
2024-01-19 19:38:52,762{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:read	[0 1 2 3 4]
2024-01-19 19:38:52,905{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	5
2024-01-19 19:38:52,908{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	5
2024-01-19 19:38:52,920{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	6
2024-01-19 19:38:52,921{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	6
2024-01-19 19:38:52,982{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2024-01-19 19:38:52,985{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[0 1 2 3 4 5 6]
2024-01-19 19:38:53,182{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-01-19 19:38:53,184{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 1 2 3 4 5 6]
2024-01-19 19:38:53,259{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-01-19 19:38:53,261{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 1 2 3 4 5 6]
2024-01-19 19:38:53,316{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	7
2024-01-19 19:38:53,317{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:broadcast	7
2024-01-19 19:38:53,330{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	8
2024-01-19 19:38:53,331{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	8
2024-01-19 19:38:53,516{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	9
2024-01-19 19:38:53,518{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	9
2024-01-19 19:38:53,538{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	10
2024-01-19 19:38:53,539{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	10
2024-01-19 19:38:53,633{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	11
2024-01-19 19:38:53,635{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	11
2024-01-19 19:38:53,689{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	12
2024-01-19 19:38:53,690{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	12
2024-01-19 19:38:53,769{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:read	nil
2024-01-19 19:38:53,771{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12]
2024-01-19 19:38:53,789{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	13
2024-01-19 19:38:53,790{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	13
2024-01-19 19:38:53,917{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2024-01-19 19:38:53,919{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13]
2024-01-19 19:38:53,919{GMT}	INFO	[jepsen worker 4] jepsen.generator.interpreter: Waiting for recovery...
2024-01-19 19:39:03,930{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2024-01-19 19:39:03,931{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2024-01-19 19:39:03,931{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-01-19 19:39:03,931{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2024-01-19 19:39:03,931{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:read	nil
2024-01-19 19:39:03,937{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13]
2024-01-19 19:39:03,937{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13]
2024-01-19 19:39:03,938{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13]
2024-01-19 19:39:03,938{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13]
2024-01-19 19:39:03,938{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	[0 1 2 3 4 5 6 7 8 9 10 11 12 13]
2024-01-19 19:39:03,953{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2024-01-19 19:39:04,001{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2024-01-19 19:39:04,001{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2024-01-19 19:39:04,001{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2024-01-19 19:39:04,001{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2024-01-19 19:39:04,001{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2024-01-19 19:39:05,735{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2024-01-19 19:39:05,741{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2024-01-19 19:39:05,894{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2024-01-19 19:39:05,906{GMT}	INFO	[jepsen results] jepsen.store: Wrote /Users/agoenka/Development/CCSRE/maelstrom-ccsre/store/broadcast/20240119T193850.738+0530/results.edn
2024-01-19 19:39:05,926{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true},
 :stats {:valid? true,
         :count 27,
         :ok-count 27,
         :fail-count 0,
         :info-count 0,
         :by-f {:broadcast {:valid? true,
                            :count 14,
                            :ok-count 14,
                            :fail-count 0,
                            :info-count 0},
                :read {:valid? true,
                       :count 13,
                       :ok-count 13,
                       :fail-count 0,
                       :info-count 0}}},
 :availability {:valid? true, :ok-fraction 1.0},
 :net {:all {:send-count 432,
             :recv-count 432,
             :msg-count 432,
             :msgs-per-op 16.0},
       :clients {:send-count 74, :recv-count 74, :msg-count 74},
       :servers {:send-count 358,
                 :recv-count 358,
                 :msg-count 358,
                 :msgs-per-op 13.259259},
       :valid? true},
 :workload {:worst-stale (),
            :duplicated-count 0,
            :valid? true,
            :lost-count 0,
            :lost (),
            :stable-count 14,
            :stale-count 0,
            :stale (),
            :never-read-count 0,
            :stable-latencies {0 0, 0.5 0, 0.95 0, 0.99 0, 1 0},
            :attempt-count 14,
            :never-read (),
            :duplicated {}},
 :valid? true}


Everything looks good! ヽ(‘ー`)ノ
